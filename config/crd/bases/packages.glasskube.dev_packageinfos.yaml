---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: packageinfos.packages.glasskube.dev
spec:
  group: packages.glasskube.dev
  names:
    kind: PackageInfo
    listKind: PackageInfoList
    plural: packageinfos
    shortNames:
    - pkgi
    singular: packageinfo
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.version
      name: Desired version
      type: string
    - jsonPath: .status.version
      name: Current version
      type: string
    - jsonPath: .status.lastUpdateTimestamp
      name: Last Updated
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PackageInfo is the Schema for the packageinfos API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PackageInfoSpec defines the desired state of PackageInfo
            properties:
              name:
                type: string
              repositoryUrl:
                type: string
              version:
                type: string
            required:
            - name
            type: object
          status:
            description: PackageInfoStatus defines the observed state of PackageInfo
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastUpdateTimestamp:
                format: date-time
                type: string
              manifest:
                properties:
                  defaultNamespace:
                    description: DefaultNamespace to install the package. May be overridden.
                    type: string
                  dependencies:
                    items:
                      properties:
                        name:
                          type: string
                        version:
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  entrypoints:
                    items:
                      description: PackageEntrypoint defines a service port a user
                        may use to access the package
                      properties:
                        localPort:
                          description: LocalPort to use for port mapping
                          format: int32
                          type: integer
                        name:
                          description: |-
                            Name of this entrypoint. Used for "glasskube open [package-name] [entrypoint-name]" if more
                            than one entrypoint exists. Optional if the package only has one entrypoint.
                          type: string
                        port:
                          description: Port of the service to bind to
                          format: int32
                          type: integer
                        scheme:
                          type: string
                        serviceName:
                          description: ServiceName is the name of a service that is
                            part of
                          type: string
                      required:
                      - port
                      - serviceName
                      type: object
                    type: array
                  helm:
                    description: Helm instructs the controller to create a helm release
                      when installing this package.
                    properties:
                      chartName:
                        description: ChartName is the name of the chart that represents
                          this package.
                        type: string
                      chartVersion:
                        description: ChartVersion of the chart that should be installed.
                        type: string
                      repositoryUrl:
                        description: |-
                          RepositoryUrl is the remote URL of the helm repository. This is the same URL you would use
                          if you use "helm repo add ...".
                        type: string
                      values:
                        description: Values that should be used for the helm release
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                    - chartName
                    - chartVersion
                    - repositoryUrl
                    type: object
                  iconUrl:
                    type: string
                  kustomize:
                    description: Kustomize instructs the controller to apply a kustomization
                      when installing this package [PLACEHOLDER].
                    type: object
                  longDescription:
                    type: string
                  manifests:
                    items:
                      properties:
                        defaultNamespace:
                          description: |-
                            DefaultNamespace, if set to a non-empty string, is used for resources that are of a namespaced
                            kind and do not have a namespace set.
                            If at least one such a resource exists, the namespace is created implicitly.
                          type: string
                        url:
                          type: string
                      required:
                      - url
                      type: object
                    type: array
                  name:
                    type: string
                  references:
                    items:
                      properties:
                        label:
                          type: string
                        url:
                          type: string
                      required:
                      - label
                      - url
                      type: object
                    type: array
                  scope:
                    description: Scope is optional (default is Cluster)
                    enum:
                    - Cluster
                    - Namespaced
                    type: string
                  shortDescription:
                    type: string
                  valueDefinitions:
                    additionalProperties:
                      properties:
                        constraints:
                          properties:
                            max:
                              type: integer
                            maxLength:
                              type: integer
                            min:
                              type: integer
                            minLength:
                              type: integer
                            pattern:
                              type: string
                            required:
                              type: boolean
                          type: object
                        defaultValue:
                          type: string
                        metadata:
                          properties:
                            description:
                              type: string
                            hints:
                              items:
                                type: string
                              type: array
                            label:
                              type: string
                          type: object
                        options:
                          items:
                            type: string
                          type: array
                        targets:
                          items:
                            properties:
                              chartName:
                                type: string
                              patch:
                                properties:
                                  op:
                                    type: string
                                  path:
                                    type: string
                                required:
                                - op
                                - path
                                type: object
                              resource:
                                properties:
                                  apiGroup:
                                    description: |-
                                      APIGroup is the group for the resource being referenced.
                                      If APIGroup is not specified, the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of resource being referenced
                                      Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                      (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              valueTemplate:
                                type: string
                            required:
                            - patch
                            type: object
                            x-kubernetes-validations:
                            - message: ValueDefinitionTarget must have either resource
                                or chartName but not both
                              rule: has(self.resource) != has(self.chartName)
                          type: array
                        type:
                          enum:
                          - boolean
                          - text
                          - number
                          - options
                          type: string
                      required:
                      - targets
                      - type
                      type: object
                    type: object
                required:
                - name
                type: object
              version:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
