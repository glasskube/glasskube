name: Build Go Project

on:
  push:
    paths-ignore:
      - website/**
  pull_request:
    paths-ignore:
      - website/**
  merge_group:
    types:
      - checks_requested
    paths-ignore:
      - website/**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup Go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5
        with:
          go-version: 1.23.x
      - name: Set up node
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: "20.9"
          cache: npm
      - uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: bin
          key: ${{ runner.os }}-${{ hashFiles('Makefile', 'go.mod', 'go.sum') }}
      - name: Install dependencies
        run: npm ci
      - run: make all
      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: artifacts-${{ runner.os }}-${{ runner.arch }}
          path: dist/
      - name: Check if repository is clean
        run: |
          STATUS="$(git status --porcelain)"
          if [ -z "$STATUS" ]; then
            echo Repository is clean.
          else
            echo "Repository is not clean:
          $STATUS"
            exit 1
          fi
