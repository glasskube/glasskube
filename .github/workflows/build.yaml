name: Build Go Project

on:
  push:
    paths-ignore:
      - website/**
  pull_request:
    paths-ignore:
      - website/**
  merge_group:
    types:
      - checks_requested
    paths-ignore:
      - website/**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
      - name: Setup Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5
        with:
          go-version: 1.23.x
      - name: Set up node
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: "20.9"
          cache: npm
      - uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
        with:
          path: bin
          key: ${{ runner.os }}-${{ hashFiles('Makefile', 'go.mod', 'go.sum') }}
      - name: Install dependencies
        run: npm ci
      - run: make all
      - uses: actions/upload-artifact@604373da6381bf24206979c74d06a550515601b9 # v4.4.1
        with:
          name: artifacts-${{ runner.os }}-${{ runner.arch }}
          path: dist/
      - name: Check if repository is clean
        run: |
          STATUS="$(git status --porcelain)"
          if [ -z "$STATUS" ]; then
            echo Repository is clean.
          else
            echo "Repository is not clean:
          $STATUS"
            exit 1
          fi
